{"version":3,"sources":["components/Contact.js","components/Header.js","components/Body.js","writeups/MiniHeader.js","writeups/Map.js","writeups/Color.js","writeups/DeskEnv.js","writeups/Bash.js","writeups/Tweaks.js","writeups/Browser.js","writeups/WriteUpIntro.js","writeups/ListofWriteUps.js","writeups/Network.js","writeups/Sleep.js","writeups/Power.js","index.js"],"names":["IndivContact","props","workingLink","bind","window","location","href","this","link","className","onClick","icon","name","React","Component","Contact","media","map","item","Header","to","Body","MiniHeader","title","style","textAlign","Map","class","Color","DeskEnv","Bash","Tweaks","Browser","WriteUpIntro","Makebutton","path","desc","ListofWriteUps","listwrite","Network","Sleep","Power","Home","App","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28a2affa.chunk.js","sourcesContent":["import React from 'react';\nimport '../style.css'\nimport media from '../media.json'\nimport { FaLinkedinIn, FaGithub, FaTrophy} from 'react-icons/fa'\n/* btw, the json idea worked way better than storing them all as vars\nbc u didn't lose your mind naming things and checking scope things.\n*/\n\n\nclass IndivContact extends React.Component {\n    // gotta bind it bc react is strange boi\n    constructor(props) {\n        super(props);\n        this.workingLink = this.workingLink.bind(this);\n    }\n    // the fn that actually gets u the link\n    workingLink () {\n        window.location.href=this.props.link;\n    }\n\n    // oooh you don't need to to use quotes anymore lol\n    // also onclick becomes onClick bc react is sPeciAl\n    render (){\n        return <button \n                    className =\"button write\" \n                    onClick={this.workingLink} >\n                     <i className=\"fa\">{this.props.icon}</i> {this.props.name} \n                </button>\n    }\n}\n// TODO: add icons! (in media.json)\n// goes thru each item in media.json and does whatever IndivContact says\nfunction Contact (){\n    return (\n        <div className=\"box\">\n            <h2> Contact Me!</h2>\n            { media.map (item => <IndivContact name={item.name} icon={item.icon} link={item.link}/> ) }\n        </div>\n    )\n}\n\nexport default Contact;\n\n// why did this page take me 2+ hrs? heavens.\n","import React from 'react';\nimport '../style.css'\nimport { Switch, Link, Route, BrowserRouter as Router, IndexRoute } from 'react-router-dom';\nimport { FaHome } from 'react-icons/fa'\nvar title=\"Krithika Ravishankar\";\n\nfunction Header(){\n\treturn (\n\t\t<div>\n\t\t\t<Link to=\"/\">\n     \t\t\t<button className=\"button home\">\n          \t\t<FaHome />\n     \t\t\t</button>\n \t\t\t</Link>\n\t\t\t<h1>{title}</h1>\n\t\t\t<hr />\n\t\t</div>\n\t);\n}\n\nexport default Header;\n","import React from 'react';\nimport '../style.css'\nimport { Switch, Link, Route, BrowserRouter as Router, IndexRoute } from 'react-router-dom';\n\nfunction Body(){\n\treturn (\n\t\t<div className=\"box\">\n\t\t\t<p>\n\t\t\tHi, I'm Krithika.\n\t\t\t<br /> <br />\n\n\t\t\tI'm a computer science student at the University of Texas at Austin.\n\t\t\t<br /> <br />\n\n\t\t\tI primarily use Python, R, and LaTeX for research. I've also used\n\t\t\tC++ and Java in other projects. I enjoy customizing and tinkering\n\t\t\twith my computers, and here are some {' '}\n\t\t\t<Link to=\"/writeup\">write-ups</Link>\n\t\t\t{' '} based on \n\t\t\tmy experiences. I love Linux! I mainly use Ubuntu and Arch, but I \n\t\t\talso use Debian, CentOS, and Suse.\n\t\t\t<br /> <br />\n\n\t\t\tI love learning languages and practicing taekwondo. \n\t\t\tI also enjoy playing the violin and creating artwork in my \n\t\t\tfree time.\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n\nexport default Body;\n","import React from 'react';\nimport '../style.css'\nimport { Switch, Link, Route, BrowserRouter as Router, IndexRoute } from 'react-router-dom';\n\nfunction MiniHeader(title){\n    return(\n        <div>\n            <Link to=\"/writeup\">\n     \t\t\t<button className=\"button home\">\n          \t\tWrite-Ups\n     \t\t\t</button>\n \t\t\t</Link>\n            <h2 style={{textAlign: 'center'}}>{title}</h2>\n        </div>\n    )\n}\n\nexport default MiniHeader;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../style.css'\n// u gotta use react-router-dom, not just react-router\nimport Header from '../components/Header'\nimport MiniHeader from './MiniHeader'\n\nfunction Map(){\n    return(\n        <div>\n            <Header />\n\t\t\t{MiniHeader(\"Mapping Keys\")}\n\t\t\t<div className=\"box\">\n                <h3>The Problem</h3>\n                    The <code class=\"inline\">Caps Lock</code> key serves mainly as a\n                    source of annoyance, and receives far too much real estate relative\n                    to its use. However, the <code class=\"inline\">Esc</code> key is\n                    quite useful (I'm primarily a Vim user), but is far too hard to\n                    reach. Currently, &Eacute;owyn has altered key settings to make\n                    life a bit easier. The <code class=\"inline\"> Caps Lock</code> key\n                    now acts like the <code class=\"inline\">Esc</code> key.\n            </div>\n            <br></br>\n            <div class=\"box\">\n\t\t        <h3>Stuff that didn't work</h3>\n                I first tried this using the command <div class=\"realcode\">xmodmap\n                    -e `clear Lock' -e `keycode 0x42 = Escape'</div> but for some\n                reason, it stopped working for one of my <span class=\"roman\">\n                    T</span><sub><span class=\"roman\">E</span></sub><span\n                    class=\"roman\">X</span>&nbsp; files.\n\t        </div>\n            <br></br>\n            <div class=\"box\">\n\t\t\t\t<h3>The Solution</h3>\n\t\t\t\t<ol>\n\t\t\t\t\t<li> I installed the <span class=\"directory\">dconf-editor</span> using <div class=\"realcode\"> sudo apt-get install\n\t\t\t\t\t\t\tdconf-tools</div>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li> I started the editor, and went to <span class=\"directory\">org</span> <i class=\"fas\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfa-chevron-right\"></i> <span class=\"directory\">gnome</span> <i class=\"fas fa-chevron-right\"></i> <span class=\"directory\">desktop</span> <i class=\"fas\n\t\t\t\t\t\t\t\t\tfa-chevron-right\"></i> <span class=\"directory\">input-sources</span></li>\n\t\t\t\t\t<li> At the bottom of the page, I saw two square braces with nothing in them. These\n\t\t\t\t\t\tbraces are <u>required</u>.</li>\n\t\t\t\t\t<li> Within these braces, I added <div class=\"realcode\">\n\t\t\t\t\t\t\t`caps:escape'</div> to add the <code class=\"inline\">Caps\n\t\t\t\t\t\t\tLock</code> key as another <code class=\"inline\">\n\t\t\t\t\t\t\tEsc</code>. The command you want to use needs to be enclosed in\n\t\t\t\t\t\tsingle quotes. If you want multiple options, they need to be comma\n\t\t\t\t\t\tseparated. A full list of commands can be found by typing <div class=\"realcode\">man 7\n\t\t\t\t\t\t\txkeyboard-config</div>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li> Exit out, and you're good to go! </li>\n\t\t\t\t</ol>\n\t\t\t\tI still haven't done this in Pippin yet.\n\t\t\t</div>\n        </div>\n    )\n}\n\nexport default Map;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../style.css'\n// u gotta use react-router-dom, not just react-router\nimport Header from '../components/Header'\nimport MiniHeader from './MiniHeader'\n\nfunction Color(){\n    return(\n        <div>\n            <Header />\n\t\t\t{MiniHeader(\"Changing Login Color\")}\n            <h2 style={{textAlign: 'center'}}>Changing Login Color</h2>\n            <div class=\"box\">\n\t\t        <h3>The Situation</h3>\n\t\t            I didn’t really like the <a href=\"https://design.ubuntu.com/brand/colour-palette/\"> default shades of\n\t\t\t        purple that Ubuntu uses\n\t\t\t        for boot-up</a>, so I wanted to change them to a pretty shade of green.\n            </div>\n\t        <br></br>\n\t        <div class=\"box\">\n\t\t        <h3>Stuff that didn't work</h3>\n\t\t            I tried changing the other instances of the aubergine purple by changing one\n\t\t            of the instances of <span class=\"monospace\">#2c001e</span>, but to my knowledge, that did nothing.\n\t        </div>\n\t        <br></br>\n\t        <div class=\"box\">\n\t\t        <h3>The Solution</h3>\n\t\t            To change the color of the login screen:\n\t\t        <ol>\n\t\t\t        <li>Type <div class=\"realcode\">xhost +local: && sudo vim\n\t\t\t\t\t/etc/alternatives/gdm3.css</div> You can change the editor\n\t\t\t\t    to Emacs or whatever you like. </li>\n\t\t\t        <li>Go to the block that begins with <span class=\"monospace\">#lockdialogGroup</span> , and change the hex color from\n\t\t\t\t        <span class=\"monospace\"> #2c001e</span> to whatever you want. I’m using\n\t\t\t\t        <span class=\"monospace\"> #0a3621</span>. </li>\n\t\t        </ol>\n\t\t\n                You know how there's a screen that appears before your lock screen? That\n                screen was still purple, so I wanted to make that green as well.\n\n                <ol>\n                    <li>Type <div class=\"realcode\"> sudo vim /usr/share/plymouth/themes/ubuntu-logo/ubuntu-logo.script</div> </li>\n                    <li>Go to the lines beginning with <span class=\"monospace\">Window.SetBackground</span>. \n                        There’ll be two of them. </li>\n                    <li>The default color on these lines is <span class=\"monospace\">(0.16, 0.00, 0.12)</span>, which corresponds to <span class=\"monospace\">#2c001e</span>. \n                        Change this (on both lines) to whatever you want (these are ratios). I’m using <span class=\"monospace\"> (0.04, 0.21, 0.13) </span>. </li>\n                    <li>Type <div class=\"realcode\">sudo update-initramfs -u</div></li>\n                    <li>That should be it! Check out <a href=\"https://askubuntu.com/questions/20829/how-can-i-change-the-purple-background-color-of-ubuntu-plymouth-boot-screen\">this link</a> for more info. </li>\n                </ol>\n                When I boot up, there's a quick flash of purple that still appears, but\n                I haven't yet figured out why that is.\n\t        </div>\n        </div>\n    )\n}\n\nexport default Color;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../style.css'\n// u gotta use react-router-dom, not just react-router\nimport Header from '../components/Header'\nimport MiniHeader from './MiniHeader'\nfunction DeskEnv (){\n    return(\n        <div>\n            <Header />\n            {MiniHeader(\"Desktop Environment\")}\n            <div class=\"box\">\n                <h3>The Problem</h3>\n                    So ... I was procrastinating on a few assignments and was looking into\n                    different desktop environments. After a bit of Googling, I landed on\n                    Xfce (comes as default with Xubuntu, which I don’t have installed). I\n                    honestly don’t remember how I installed it; it had something to do\n                    with xargs or xorgs or something to that effect.\n                    <br></br>\n                    <br></br>\n                    Long story\n                    short, it was a disaster. I half-heartedly tried to customize it, but\n                    it’s really not worth it (at least with my config). From my experience,\n                    GNOME is far more user-friendly. Perhaps Xfce would have been nicer had\n                    I spend more time with it, but for the few hours I spent with it, It was\n                    the worst<sup>TM</sup>.\n                    <br></br>\n                    <br></br>\n                    Here’s some important advice: <b>don’t install something unless you know\n                    how to uninstall it</b>. Seriously. The uninstallation process for\n                    Xfce was not clean.\n            </div>\n            <br></br>\n            <div class=\"box\">\n                <h3>The Solution</h3>\n                    I tried uninstalling some packages and things\n                    based off some answers I got from Stack- Overflow/StackExchange. I’m honestly\n                    not sure what the difference is between Xubuntu and normal Ubuntu, but whenever\n                    I rebooted my computer, it started out with the Xubuntu screen (maybe this was\n                    harmless, or maybe not, but either way it was bugging me).\n                    <br></br>\n                    <br></br>\n                    <a href=\"https://askubuntu.com/questions/92084/how-to-remove-xubuntu-desktop\">\n                    Other StackOverflow answer </a> to the rescue! I used a couple of\n                    commands:\n                    <ol>\n                        <li>\n                            <div class=\"realcode\">\n                                sudo apt-get autoremove --purge xubuntu-* && sudo apt-get autoremove --purge\n                                xfce* </div>\n                        </li>\n                        <li>\n                            <div class=\"realcode\">sudo apt-get autoremove --purge $( dpkg-query -l *xubuntu* | grep ii | tr -s \" \" | cut -d\" \" -f2; dpkg-query -l *xfce* | grep 'ii' | tr -s \" \" | cut -d\" \" -f2 )\n                            </div>\n                        </li>\n                    </ol>\n                    I'm not sure if both commands are necessary, but I ran both, rebooted,\n                    and the Xubuntu screen did not appear!\n                    <br></br>\n                    <br></br>\n                    I'm probably going to wind up configuring a desktop environment for\n                    Pippin at some point in time. Right now, I'm considering i3, but I'm not\n                    sure. If/when I do set it up, I'll update it here.\n            </div>\n        </div>\n    )\n}\n\nexport default DeskEnv;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../style.css'\n// u gotta use react-router-dom, not just react-router\nimport Header from '../components/Header'\nimport MiniHeader from './MiniHeader'\n\nfunction Bash(){\n    return(\n        <div>\n            <Header />\n            {MiniHeader(\"Beautifying the Bash Experience\")}\n            <div class=\"box\">\n            <h3>Customizing the Command Prompt</h3>\n\t\t        There’s an insane number of things you can do to improve your Bash experience, one\n\t\t        of which being changing up your command prompt.\n\t\t        <br></br>\n                <br></br>\n                There are couple of definitions to note within this section: the\n                environmental variables <span class=\"monospace\">$PS1</span> and <span class=\"monospace\">$PS2</span>. <span class=\"monospace\">$PS1</span> refers to the primary\n                command prompt, the one you see every time you open up a Bash terminal.\n                <span class=\"monospace\">$PS2</span> refers to the secondary command prompt, which is\n                what you see when the terminal is expecting more input from you, like when\n                you use <span class=\"directory\">gcalccmd</span>.\n                <br></br>\n\t\t    <h4>The Problem</h4>\n                I found the default primary command prompt to be a bit too long; it was\n                eating up valuable screen space. Hence, I set it to something shorter,\n                my initials in bold green, and a dollar sign: <span class=\"monospace\">\\e[1;32mKR$ \\e[m</span>.\n                <br></br>\n                <br></br>\n                However, when I use the <code class=\"inline\">Ctrl</code>+<code class=\"inline\">p</code> or the <code class=\"inline\">Up Arrow</code> key to access the previous command,\n                sometimes, it'll held a part of the previous line in the command line. This\n                did not affect the next command I ran, but it still bugged me.\n\t\t    <h4>Stuff that didn't work</h4>\n\t\t        Based on StackOverflow's answers, I enclosed my prompt in <span class=\"monospace\">\\[</span> and <span class=\"monospace\">\\]</span>, to get <span class=\"monospace\">\\[\\e[1;32mKR$ \\e[m\\]</span>, but that\n\t\t        was even worse.\n            <h4>The Solution</h4>\n                Turns out, I didn't read the answers correctly. The solution is to\n                change the command prompt, the value of <span class=\"monospace\">$PS1</span> by enclosing things that\n                begin with <span class=\"monospace\">\\e</span> in <span class=\"monospace\">\\[</span> and\n                <span class=\"monospace\">\\]</span>. These are the nonprintable portions.\n\n                I had to split this up into two different sections, one for each\n                nonprintable chunk. Hence, I was left with <span class=\"monospace\">\\[\\e[1;32m\\]</span> and <span class=\"monospace\">\\[\\e[m\\]</span> once I\n                had added in those sequences.\n\n                The final solution was <span class=\"monospace\">\\[\\e[1;32m\\]KR$\n                    \\[\\e[m\\]</span>.\n\t\t</div>\n\t\t<br></br>\n\t\t<div class=\"box\">\n\t\t<h3>Changing Appearance of Bash Layout</h3>\n\t\tYou can change the colors of how your directories, files and other things look when you\n\t\tlist out the contents of a directory. This stuff is stored in an environmental variable called\n\t\t<span class=\"monospace\">$LS_COLORS</span>.\n\t\t<br></br>\n\t\tIf you type <div class=\"realcode\">echo $LS_COLORS</div> you’ll see a bunch of gunk. If you want to play around\n\t\tbefore committing to anything, you can set another environmental variable to the value\n\t\tof <span class=\"monospace\">$LS_COLORS</span>, and make any changes you want to <span class=\"monospace\">$LS_COLORS</span> to check it out. These\n\t\tchanges will go away once you kill the current terminal. If you want any changes to be\n\t\tpermanent, just add a line to your <span class=\"monospace\">.bashrc</span> file.\n\t\t<br></br>\n\t\tThere are a gazillion options to customizing your setup, but a basic one could read as\n\t\tfollows: <div class=\"realcode\">di=1;36:*.png=1;35:ex=1;33</div>\n\t\tLet’s go through it bit by bit:\n\t\t<ol>\n\t\t\t<li>Directories are bright cyan</li>\n\t\t\t<li>All PNG images are purple</li>\n\t\t\t<li>All executables are bright yellow</li>\n\t\t\t<li>Entries are colon-separated</li>\n\t\t</ol>\n\t\tMy current settings for this variable are in my <span class=\"monospace\">.bashrc</span> file.\n\t</div>\n        </div>\n\n    )\n}\n\nexport default Bash;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../style.css'\n// u gotta use react-router-dom, not just react-router\nimport Header from '../components/Header'\nimport MiniHeader from './MiniHeader'\n\nfunction Tweaks(){\n    return(\n        <div>\n            <Header />\n            {MiniHeader(\"Accent Marks\")}\n            <div class=\"box\">\n                <h3>The Problem</h3>\n                I needed to be able to type diacritics with my keyboard on &Eacute;owyn.\n                I installed the \"English (intl., with AltGr dead keys)\" keyboard, but\n                when I typed in the correct key bindings, such as <code class=\"inline\">AltGr</code>+<code class=\"inline\">a</code>, the character\n                \"&aacute;\" was not produced.\n            </div>\n            <br></br>\n            <div class=\"box\">\n            <h3>The Solution</h3>\n                The issue was that the <code class=\"inline\">Compose</code> key was not set. Hence,\n                I had to set the <code class=\"inline\">Compose</code> key to the\n                <code class=\"inline\">AltGr</code> key.\n                <br></br>\n                <br></br>\n                I did this by installing the <span class=\"directory\"> gnome-tweaks</span> utility with\n                <span class=\"monospace\">sudo apt install gnome-tweak-tool</span> and ran it with\n                <span class=\"monospace\"> gnome-tweaks</span>. In Tweaks,\n                I went to <span class=\"directory\">Keyboard & Mouse</span> <i class=\"fas fa-chevron-right\"></i>\n                <span class=\"directory\">Compose Key</span>. The default is set to <span class=\"monospace\">off</span>,\n                but you can toggle that switch and pick the key you want. I went with\n                <code class=\"inline\">AltGr</code>, since that was what the keyboard I downloaded said to use.\n            </div>\n            <br></br>\n            <div class=\"box\">\n                <h3>Additional Fun Stuff</h3>\n                You can do a lot of other cool things with Tweaks - you can customize how pretty much\n                everything looks. You can change the fonts the OS uses, what format the time\n                should be printed in, pick which apps should be launched at boot up, and so much more.\n\n        </div>\n        </div>\n    )\n}\n\nexport default Tweaks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../style.css'\n// u gotta use react-router-dom, not just react-router\nimport Header from '../components/Header'\nimport MiniHeader from './MiniHeader'\n\nfunction Browser(){\n    return(\n        <div>\n            <Header />\n            {MiniHeader(\"Browser Reviews\")}\n            <div class=\"box\">\n                I get to sound like one of those Youtubers that test out new products! Fun times. Let's get started.\n                <h3>The Situation</h3>\n                Firefox wasn’t cutting it, so I started looking into other browsers. Plus, I was kinda bored one evening and did not want to start my homework.\n                <h3>GNOME Web/Epiphany</h3>\n                I started out by looking into GNOME Web (aka Epiphany), which is supposed to be\n                lightweight and amazing. TL;DR: it wasn’t.\n                <br></br><br></br>\n                First off, install Epiphany by typing in the following commands (this is on Ubuntu):\n                <pre>\n                    <div class=\"realcode\">\n                    sudo add-apt-repository ppa:gnome3-team/gnome3 <br></br>\n                    sudo apt-get update <br></br>\n                    sudo apt-get install epiphany-browser\n                    </div>\n                </pre>\n                <h4>Pros</h4>\n                <ul>\n                        <li>It’s faster than Firefox</li>\n                        <li>It deals with passwords cleaner in non-private browsing mode</li>\n                </ul>\n                <h4>Cons</h4>\n                <ul>\n                        <li>It makes &Eacute;owyn make a high-pitched sound and leads to overheating. I tried recali-\n                                brating powertop after installation, but that didn’t help any.</li>\n                        <li>It doesn’t have a “never remember history” option</li>\n                        <li>Private browsing settings are kinda weird</li>\n                        <li>Difficult and nonintuitive to customize</li>\n                </ul>\n                Overall, I wasn’t really a big fan (no pun intended, but the fans were running a bit too\n                much). The main reason why I didn’t go with Epiphany was probably the weird hissing\n                sounds my laptop started making. I cleaned up afterwards by getting rid of the repo and\n                by uninstalling Epiphany.\n\n\n                <h3>Chromium</h3>\n                I installed and used Chromium for the better part of 10 minutes. This (obviously) had\n                the same look and feel as Chrome, but I still wasn’t a big fan of its RAM consumption and\n                lack of a PDF viewer (which I figured was super standard, but I guess not). I uninstalled\n                Chromium and moved on with life.\n                <h3>Opera</h3>\n                I installed Opera using the Ubuntu Software app, and not through command line.\n                <h4>Pros</h4>\n                <ul>\n                        <li>It has a battery conserving mode! You can choose whether you want to enable it all\n                                the time, or only when you’re not connected to external power</li>\n                        <li>Super easy to customize, with multiple themes! The task bar is easier to customize\n                                than any other browser I’ve used. There are so many options</li>\n                        <li>The GUI is intuitive, more so than MS Edge, Firefox, or Chrome.</li>\n                        <li>It seems faster than Firefox</li>\n                        <li>Videos work (HTML5), unlike in GNOME Web/Epiphany.</li>\n                        <li>VPNS! I love them</li>\n                        <li>The pop-out video feature is super cool and useful</li>\n                </ul>\n                <h4>Cons</h4>\n                <ul>\n                        <li>There’s not really a “never remember history” option, like there was in Firefox</li>\n                        <li>Situation regarding addons is confusing</li>\n                        <li>FB Messenger is kinda weird; it only works sometimes</li>\n                        <li>Passwords are <i>not</i> stored securely</li>\n                </ul>\n                It also gives you an option to <a href=\"https://help.opera.com/en/latest/security-and-privacy/#VPN\">enable VPN</a>:\n                <ol>\n                        <li>Go to <span class=\"directory\">Settings</span> <i class=\"fas fa-chevron-right\"></i> <span class=\"directory\">Advanced</span> and double click <span class=\"directory\">Advanced</span></li>\n                        <li>Go to <span class=\"directory\">VPN</span> and turn on <b>Enable VPN</b></li>\n                        <li>Go to the top of the search bar; you’ll see the letters “VPN” in a light grey. Click on\n                                that, so that it becomes blue. This will let you pick the location.</li>\n                </ol>\n                Also, keep in mind that by default, addons/extentions are not enabled in private mode; you have to go and add them manually.\n                <br></br><br></br>\n                Overall, I’m pretty happy with this one. We’ll see how it goes!\n        </div>\n        </div>\n    )\n}\n\nexport default Browser;","import React from 'react';\nimport '../style.css'\nimport Header from '../components/Header'\n\nfunction WriteUpIntro(){\n\treturn (\n\t\t<div> \n\t\t\t<Header />\n\t\t\t<div className=\"box\">\n\t\t\t\t<p> \n\t\t\t\t\tHi, how's it going?\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\tThis is essentially a series of write-ups for various tech issues\n\t\t\t\t\tI've encountered. I'm not sure if these will be that helpful for\n\t\t\t\t\tyou, since this is just documentation for my own\n\t\t\t\t\tsanity. However, if these help you, that's great!\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\tMy dotfiles and these write-ups are a compilation of various things\n\t\t\t\t\tI've found online (typically from wiki sites, StackExchange, and\n\t\t\t\t\tother folks' GitHub pages).\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\tThese are my current computers:\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>&Eacute;owyn: Dell XPS 15 9570, with Ubuntu 18.04 </li>\n\t\t\t\t\t\t<li>Pippin: Raspberry Pi 3B+, with Arch Linux ARM and Debian </li>\n\t\t\t\t\t</ul>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default WriteUpIntro;\n","import React from 'react';\nimport '../style.css'\nimport listwrite from './listwrite.json'\nimport { Switch, Link, Route, BrowserRouter as Router, IndexRoute } from 'react-router-dom';\nimport WriteUpIntro from './WriteUpIntro'\nimport MiniHeader from './MiniHeader'\n\nclass Makebutton extends React.Component {\n\n    render (){\n        return (\n                <div>\n                    <div class=\"box\">\n                        <Link to={this.props.path}>\n                            <h2> {this.props.title}</h2>\n                        </Link>\n                        <p>\n                            {this.props.desc}\n                        </p>\n                    </div>\n                    <br></br>\n                </div>\n        );\n    }\n}\n\nfunction ListofWriteUps (){\n    return (\n        <div>\n            <WriteUpIntro />\n            {MiniHeader(\"Write-Ups\")}\n            { listwrite.map (item => <Makebutton title={item.title} path={item.path} desc={item.desc} /> ) }\n\n        </div>\n    )\n}\n\nexport default ListofWriteUps;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../style.css'\n// u gotta use react-router-dom, not just react-router\nimport Header from '../components/Header'\nimport MiniHeader from './MiniHeader'\n\nfunction Network(){\n    return(\n        <div>\n            <Header />\n            {MiniHeader(\"Network Connection for Arch Linux ARM\")}\n            <div class=\"box\">\n                <h3>The Problem</h3>This is pretty fundamental: I just wanted to get\n                access to WiFi, so that I could install the rest of my packages and\n                continue setting up Pippin. I needed this to work before I could do much\n                else - I was working without an Ethernet cable for most part. I ran\n                everything as root for the following steps, so I have no clue which\n                commands require superuser privileges.\n        </div>\n        <br></br>\n        <div class=\"box\">\n                <h3>Stuff I tried that didn't work</h3>\n                Holy heavens. This was my first\n                time tinkering with Arch, and people did warn me that it'd be rough. I\n                just hadn't imagined that it'd take me the better part of half a day to get\n                the WiFi to work. I tried a bunch of different things ... none of which\n                worked.\n                <h4>Wifi Menu</h4>\n                The first thing I tried was running the <span class=\"directory\">wifi-menu</span> as root. It prompted me to pick the WiFi\n                network and enter in the password. I tried a few different networks, all\n                with correct passwords, but I kept getting an error message.\n                <br></br><br></br>\n                I also ran into other issues while trying to figure this out. Turns out,\n                sometimes it'll save a network profile for you, which will make it so\n                that that same network will not appear in the <span class=\"directory\">wifi-menu</span>. These profiles will appear in the <span class=\"monospace\">/etc/netctl</span> directory, which you'll have to delete\n                if you want the corresponding networks to show up in the menu. This led\n                me to the next thing I tried.\n                <h4>Netctl</h4>\n                I spent a ridiculous number of hours in the <span class=\"monospace\">/etc/netctl</span> directory; I'm sick of it. By the way,\n                everything in these steps was done as root, since (a) I didn't feel like\n                typing <span class=\"monospace\">sudo</span> every time, and (b), I couldn't even\n                install it without network connection.\n                <br></br><br></br>\n                I ran the command <div class=\"realcode\">lspci -k </div> to check if the\n                kernel loaded the driver. I got no result. As I mentioned early, the\n                <span class=\"directory\">wifi-menu</span> and the <span class=\"directory\">netctl</span> methods talk to each other,\n                in terms of creating profiles. Since I'd already established that\n                the <span class=\"directory\">wifi-menu</span> method wasn't working to create\n                a valid profile, I tried to make my own.\n                <ol>\n                        <li> To figure out the name of my interface, so I ran the\n                                command <div class=\"realcode\">iwconfig</div> I saw three labels\n                                on the LHS, <span class=\"monospace\">lo</span>, <span class=\"monospace\">wlan0</span>, and <span class=\"monospace\">eth0</span>. Hence,\n                                my interface was called <span class=\"monospace\">wlan0</span>.</li>\n                        <li>I went to the <span class=\"monospace\">examples</span> and took a look. I\n                                made a copy of the <span class=\"monospace\">wireless-wpa</span> profile in\n                                the <span class=\"monospace\">netctl</span> directory. </li>\n                        <li> I edited my copy of the profile and filled in the necessary\n                                components:\n                                <ul>\n                                        <li>Interface (in my case) is <span class=\"monospace\">wlan0</span> </li>\n                                        <li>ESSID is name of WiFi network</li>\n                                        <li>key is the WiFi password</li>\n                                </ul>\n                        </li>\n                        <li>Run the command <div class=\"realcode\">netctl start\n                                        my_profile</div>\n                        </li>\n                        <li>At this point, you should test your connection. Consider\n                                <span class=\"directory\">ping</span>ing a website you like. </li>\n                        <li>If it works, great! You can set it to be long-term using the\n                                command <div class=\"realcode\">netctl enable\n                                        my_profile</div> Since I didn't even get it to work\n                                (the previous two steps), I didn't bother running this.</li>\n\n                </ol>\n                I tested this several times with different spellings of the WiFi\n                networks (I don't think it would have made a difference\n                either way, but it was worth a shot). I also repeated this\n                process with the other <span class=\"monospace\">wpa</span>-related\n                example profile to no avail.\n\n                <h4>WPA Supplicant </h4>\n                I spend an inordinate amount of time watching videos on people\n                setting up their machines with Arch, and some of them set up their\n                WiFi by setting up their <span class=\"monospace\">/etc/wpa_supplicant</span>\n                directories. To be honest, I couldn't really follow them easily, but\n                here's what I did based on the <a href=\"https://wiki.archlinux.org/index.php/WPA_supplicant\"> ArchLinux page </a>. \n                I ran the following commands in the <span class=\"monospace\">/etc/wpa_supplicant</span> directory:\n\n                <pre>\n                    <div class=\"realcode\">\n                        touch wpa_supplicant.conf <br></br>\n                        echo \"ctrl_interface=/run/wpa_supplicant\" >> wpa_supplicant.conf <br></br>\n                        echo \"update_config=1\" >> wpa_supplicant.conf <br></br>\n                        wpa_supplicant -B -i wlan0 -c wpa_supplicant.conf <br></br>\n                        wpa_cli <br></br>\n                        </div>\n                </pre>\n                        After starting the program, I ran the commands\n                        <pre><div class=\"realcode\">\n                            scan <br></br>\n                            scan_results\n                            </div>\n                        </pre>\n                        On the these commands, however, I got error messages. I didn't proceed with the\n                        rest of the instructions, since I couldn't even see the available networks,\n                        which was necessary to set the SSID and password of the network. However, I was\n                        a dumb frog, and didn't realize that I just needed to read further on the page.\n                        <br></br><br></br>\n                        I don't know why none of these worked.\n                </div>\n                <br></br>\n                <div class=\"box\">\n                        <h3>The Solution</h3>The solution is underwhelmingly simple, and\n                        involves the WPA supplicant method:\n                        <br></br><br></br>\n                        I had to run:\n                <pre><div class=\"realcode\">\n                    <span class=\"monospace\">{'cat << EOF >> root/etc/systemd/network/wlan0.network'}</span> <br></br>\n            \n                    [Match] <br></br>\n                    Name=wlan0 <br></br>\n                    <br></br>\n                    [Network]<br></br>\n                    DHCP=yes <br></br>\n                    EOF <br></br>\n                    <br></br>\n                    <span class=\"monospace\">{'wpa_passphrase \"${SSID}\" \"${PASS}\" > root/etc/wpa_supplicant/wpa_supplicant-wlan0.conf'}</span> <br></br>\n                    <br></br>\n                    ln -s \\ <br></br>\n                    /usr/lib/systemd/system/wpa_supplicant@.service \\ <br></br>\n                    root/etc/systemd/system/multi-user.target.wants/wpa_supplicant@wlan0.service <br></br>\n                    </div>\n                </pre>\n\n\n                            replacing <span class=\"monospace\">{'$\"{SSID}\"'}</span> with the name of the network, and the\n                            <span class=\"monospace\">{'$\"{PASS}\"'}</span> with the password.\n<br></br><br></br>\nThis finally worked :)\n\n<br></br><br></br>\nI'm adding this at another date. Another solution that's substantially easier\nis to hook yourself up to an Ethernet connection, and install the <span class=\"directory\">network manager</span>, which comes with both <span class=\"directory\">nmcli</span> and <span class=\"directory\">nmtui</span> programs, which are\npretty intuitive to use.\n<br></br><br></br>\nWhile I had initially tried to install this program, I hadn't realized that\nbeing on a university campus (with the weird login page) may have been affecting\nmy ability to login. Again, I'm not sure, but when I took Pippin back home and\nretried some things, I was magically able to install this. I figured this out by\nreflashing Pippin with Debian, but running into the same issues (not being able\nto install/update anything).\n<br></br><br></br>\nMoral of the story? Do this at home.\n</div>\n        </div>\n    )\n}\n\nexport default Network;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../style.css'\n// u gotta use react-router-dom, not just react-router\nimport Header from '../components/Header'\nimport MiniHeader from './MiniHeader'\n\nfunction Sleep(){\n    return(\n        <div>\n            <Header />\n            {MiniHeader(\"Sleep and Wake\")}\n            <div class=\"box\">\n                <h3>The Problem</h3>\n                &Eacute;owyn, my lovely Dell XPS 15 9570, likes to give its Ubuntu (and Linux) users hell when\n                it comes to going to sleep mode and waking up.\n            </div>\n            <br></br>\n            <div class=\"box\">\n                <h3>Stuff that didn't work</h3>\n                The first solution I looked up was command-line ways to put the computer to sleep. I\n                tried using the <div class=\"realcode\">pm-suspend-hybrid</div> command from <span class=\"directory\">pm-utils</span> as a superuser (which did\n                nothing) as well as tried the <div class=\"realcode\">systemcl hibernate</div> command. The latter had the same\n                effect as closing the laptop, unfortunately.\n                <br></br><br></br>\n                The next step was checking out my BIOS settings.\n                <ol>\n                        <li>Get drivers (an <span class=\"directory\">.exe</span> file) from the Dell website (a truly dreadful experience), put the\n                                file on a USB drive, and mount the drive.</li>\n                        <li>Shut down the computer and enter the BIOS by pressing the F2 key, and going\n                                to <span class=\"directory\">Settings</span> <i class=\"fas fa-chevron-right\"></i> <span class=\"directory\">Power Management</span> <i class=\"fas fa-chevron-right\"></i> <span class=\"directory\">USB Wake Support</span> as well as <span class=\"directory\">Settings</span> <i class=\"fas fa-chevron-right\"></i> <span class=\"directory\">Power\n                                        Management</span> <i class=\"fas fa-chevron-right\"></i> <span class=\"directory\">Block Sleep</span>.</li>\n                        <li>One website said that the <code class=\"inline\">Enable USB Wake Support </code> button would be disabled, and that\n                                I should enable it. It also said that that the <code class=\"inline\">Block Sleep</code> option would also be selected,\n                                and that I should disable it. However, my BIOS settings were already in these states.</li>\n                        <li>The next step was to update the BIOS.\n                                <ol>\n                                        <li>Repeatedly pressing <code class=\"inline\">F12</code> (I don’t actually know if doing it only once suffices)</li>\n                                        <li>Selecting the <code class=\"inline\">BIOS Flash Update</code></li>\n                                        <li>Navigating to and selecting that <span class=\"directory\">.exe</span> file we talked about earlier</li>\n                                        <li>Waiting for a <i>while</i></li>\n                                </ol>\n                        </li>\n                </ol>\n                This did absolutely zilch to fix the issue, but it was a learning experience. Yay! I now\n                know how to update my BIOS.\n        </div>\n        <br></br>\n        <div class=\"box\">\n                <h3>The Solution</h3>\n                There’s a pretty simple <a href=\"https://youtu.be/f-u7Zk_itUU\">4-ish minute long YouTube video</a> that explained this the best. The\n                chap pulled a ton of this stuff from ArchWiki. The <a href=\"https://wiki.archlinux.org/index.php/Dell_XPS_15_7590\">pertinent stuff</a> can be found in the\n                <b>Power Management</b> section of the page.\n                <ol>\n                        <li>If you type <div class=\"realcode\">cat /sys/power/mem_sleep</div> you’ll see the (default) response:\n                                <span class=\"directory\">[s2idle] deep</span>, meaning that the s2idle is selected.</li>\n                        <li>To fix the issue, you’ll want to use the deep version instead. You could just go ahead\n                                and use the command <div class=\"realcode\">echo deep|sudo tee/sys/power/mem_sleep</div> which would\n                                temporarily fix the issue.</li>\n                        <li>To make the change permanent, change the kernel parameters by editing the <span class=\"monospace\">/etc/default/grub</span> as a superuser.</li>\n                        <li> In the <span class=\"monospace\">grub</span> file, the <span class=\"monospace\">GRUB_CMDLINE_LINUX_DEFAULT</span> (the boot options) is set to\n                                <span class=\"monospace\">quiet splash</span>.\n                                <ul>\n                                        <li> The <span class=\"monospace\">quiet</span> part just means “non-verbose.” Without this, a bazillion messages\n                                                would be printed to the screen. </li>\n                                        <li>The <span class=\"monospace\">splash</span> bit gives us something to look at while the real stuff loads in the\n                                                background. Without this, we’d just be staring at a blank screen.</li>\n                                </ul>\n                        </li>\n                        <li>After the <span class=\"monospace\">quiet splash</span>, add the text <span class=\"monospace\">mem_sleep_default=deep</span>.</li>\n                        <li>Now type <div class=\"realcode\">sudo grub-mkconfig -o /boot/grub/grub.cfg</div>\n                        </li>\n                        <li>Reboot, test, and we’re done!</li>\n                </ol>\n\n        </div>\n        </div>\n    )\n}\n\nexport default Sleep;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../style.css'\n// u gotta use react-router-dom, not just react-router\nimport Header from '../components/Header'\nimport MiniHeader from './MiniHeader'\nfunction Power(){\n    return(\n        <div>\n            <Header />\n            {MiniHeader(\"Power Management\")}\n            <div class=\"box\">\n                <h3>The Problem</h3>\n                &Eacute;owyn's battery consumption is ... less than optimal. From what the\n                ArchWiki recommended, I’m testing out powertop, a “tool provided by Intel to enable\n                various powersaving modes in userspace, kernel and hardware. It is possible to monitor\n                processes and show which of them are utilizing the CPU and wake it from its Idle-States, allowing to identify applications with particular high power demands.”\n                <br></br>\n                <br></br>\n                I’m also testing out TLP for better power management.\n                <h3>Stuff to watch out for</h3>\n                <ul>\n                        <li>You’re going to want to keep powertop running for a bit only connected to\n                                <u>battery power</u>. If you don’t, powertop won’t have enough measurement data. </li>\n                        <li> Some folks have reported issues with powertop and USB. The fix is going to the\n                                <span class=\"b\">Tunables</span> selection, and changing the settings at the appropriate line from “Good”\n                                to “Bad.”</li>\n                        <li> You can calibrate using <div class=\"realcode\">sudo powertop --calibrate</div>\n                        </li>\n                </ul>\n\n\n                <h3>Setting Up Powertop</h3>\n                <ol>\n                        <li> Install using <div class=\"realcode\">sudo apt-get install powertop</div>\n                        </li>\n                        <li> Type <div class=\"realcode\">sudo powertop</div> or <div class=\"realcode\">sudo powertop --auto-tune</div>. Using the <span class=\"b\">auto-tune</span> flag\n                                                changes all of the Tunables to “Good.”</li>\n                        <li> However, these changes aren’t permanent. If you want to make these changes permanent, install powertop as a service by typing the following:\n                                <pre> \n                                    <div class=\"realcode\">\n                                    \n                                    <span class=\"monospace\">{'cat << EOF | sudo tee /etc/systemd/system/powertop.service'}</span>\n                                    [Unit] <br></br>\n                                    Description=PowerTOP auto tune <br></br>\n                                    <br></br>\n                                    [Service]<br></br>\n                                    Type=idle<br></br>\n                                    Environment=\"TERM=dumb\"<br></br>\n                                    ExecStart=/usr/sbin/powertop --auto-tune<br></br>\n                                    <br></br>\n                                    [Install]<br></br>\n                                    WantedBy=multi-user.target<br></br>\n                                    EOF<br></br>\n                                    <br></br>\n                                    systemctl daemon-reload<br></br>\n                                    systemctl enable powertop.service <br></br>\n                                    </div>\n                                </pre>\n                        </li>\n                        <li>You should be good to go! Check out <a href=\"https://askubuntu.com/questions/112705/how-do-i-make-powertop-changes-permanent\">this link</a> for more info.</li>\n                </ol>\n\n\n                <h3>Installing TLP</h3>\n                <ol>\n                        <li>I installed TLP using <div class=\"realcode\">sudo apt install tlp</div>\n                        </li>\n                        <li>There’s an optional graphical UI for TLP called TLPUI. First, add the PPA repository\n                                using <div class=\"realcode\">sudo add-apt-repository ppa:linuxuprising/apps</div>\n                        </li>\n                        <li>Then, type <div class=\"realcode\">sudo apt install tlpui</div>\n                        </li>\n                        <li>If you don’t like TLP, uninstall using <div class=\"realcode\">sudo apt remove --autoremove tlpui</div> and go to <span class=\"a\">Software & Updates</span> <i class=\"fas fa-chevron-right\"></i> <span class=\"a\">Other Software</span> to remove the PPA. </li>\n                </ol>\n\n\n        </div>\n        </div>\n    )\n}\n\nexport default Power;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css'\nimport Contact from './components/Contact'\nimport Header from './components/Header'\nimport Body from './components/Body'\n// u gotta use react-router-dom, not just react-router\nimport { Switch, Link, Route, BrowserRouter as Router, IndexRoute } from 'react-router-dom';\n\nimport Map from './writeups/Map'\nimport Color from './writeups/Color'\nimport DeskEnv from './writeups/DeskEnv'\nimport Bash from './writeups/Bash'\nimport Tweaks from './writeups/Tweaks'\nimport Browser from './writeups/Browser'\nimport ListofWriteUps from './writeups/ListofWriteUps';\nimport Network from './writeups/Network';\nimport Sleep from './writeups/Sleep';\nimport Power from './writeups/Power'\n\nexport const Home = () => (\n    <div>\n\t\t<Header />\n\t\t<Body />\n\t\t<br></br>\n\t\t<Contact />\n    </div>\n);\n\n// App Component\nfunction App(){\n    return(\n        <div>\n\t\t\t<br /> <br />\n\t\t\t<Switch>\n            \t<Route exact path=\"/\" component={Home}/>\n\t\t\t\t<Route exact path=\"/writeup\" component={ListofWriteUps}/>\n\t\t\t\t<Route path=\"/writeup/map\" component={Map}/>\n\t\t\t\t<Route path=\"/writeup/color\" component={Color}/>\n\t\t\t\t<Route path=\"/writeup/deskenv\" component={DeskEnv}/>\n\t\t\t\t<Route path=\"/writeup/bash\" component={Bash}/>\n\t\t\t\t<Route path=\"/writeup/tweaks\" component={Tweaks}/>\n\t\t\t\t<Route path=\"/writeup/browser\" component={Browser}/>\n\t\t\t\t<Route path=\"/writeup/network\" component={Network}/>\n\t\t\t\t<Route path=\"/writeup/sleep\" component={Sleep}/>\n\t\t\t\t<Route path=\"/writeup/power\" component={Power}/>\n          \t</Switch>\n\n        </div>\n    );\n}\n\n\nReactDOM.render(\n\t<Router>\n\t\t<App />\n\t</Router>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}